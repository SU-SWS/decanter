@charset "UTF-8";

//
// flex-column-width($columns, $gutter: $gutter-xs, $grid-columns: 12)
//
// Return a calulated column width that can then be passed in to a `calc()`.
//
// $columns - mixed: Number of columns either as integer or `x of y`
// $gutter - unit: The width of the gutter in a css unit
// $grid-columns - integer: the number of columns in the grid
//
// Style guide: Functions.Flex.flex-column-width
//
@function flex-column-width($columns, $gutter: $gutter-xs, $grid-columns: $grid-columns) {
  $_column-ratio: flex-column-ratio($columns, $grid-columns);

  // Make note here.
  $_total-columns: $grid-columns;
  @if length($columns) == 3 {
    $_total-columns: flex-parse-columns($columns);
  }

  @if $gutter == 0 {
    @return unquote("#{percentage($_column-ratio)}");
  }
  @else {
    $_gutter-affordance: (#{(1 - nth($columns, 1) / $_total-columns) * $gutter});
    @return unquote("#{percentage($_column-ratio)} - #{$_gutter-affordance}");
  }
}
