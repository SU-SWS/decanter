@charset "UTF-8";

//
// Breakpoints
//
// Style guide: Variables.Core.Breakpoints
//

//
// $su-screen-xs
//
// Markup: $su-screen-xs: 0px !default;
//
// Styleguide: Variables.Core.Breakpoints.su-screen-xs
//
$su-screen-xs: 0 !default;

//
// $su-screen-sm
//
// Markup: $su-screen-sm: 576px !default;
//
// Styleguide: Variables.Core.Breakpoints.su-screen-sm
//
$su-screen-sm: 576px !default;

//
// $su-screen-md
//
// Markup: $su-screen-md: 768px !default;
//
// Styleguide: Variables.Core.Breakpoints.su-screen-md
//
$su-screen-md: 768px !default;

//
// $su-screen-lg
//
// Markup: $su-screen-lg: 992px !default;
//
// Styleguide: Variables.Core.Breakpoints.su-screen-lg
//
$su-screen-lg: 992px !default;

//
// $su-screen-xl
//
// Markup: $su-screen-xl: 1200px !default;
//
// Styleguide: Variables.Core.Breakpoints.su-screen-xl
//
$su-screen-xl: 1200px !default;

//
// $su-screen-2xl
//
// Markup: $su-screen-2xl: 1500px !default;
//
// Styleguide: Variables.Core.Breakpoints.su-screen-2xl
//
$su-screen-2xl: $su-site-max-width !default;

//
// $su-breakpoint-xs
//
// Mixin for basic mobile-first media query for xs-and-up screen size.
//
// Markup: $su-breakpoint-xs: 'only screen and (min-width: #{$su-screen-xs})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-xs
$su-breakpoint-xs: 'only screen and (min-width: #{$su-screen-xs})' !default;

//
// $su-breakpoint-xs-only
//
// Mixin for basic mobile-first media query for xs-only screen size.
//
// Markup: $su-breakpoint-xs-only: 'only screen and (min-width: #{$su-screen-xs}) and (max-width: #{$su-screen-sm - 1})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-xs-only
$su-breakpoint-xs-only: 'only screen and (min-width: #{$su-screen-xs}) and (max-width: #{$su-screen-sm - 1})' !default;

//
// $su-breakpoint-sm
//
// Mixin for basic mobile-first media query for sm-and-up screen size.
//
// Markup: $su-breakpoint-sm: (media: 'only screen and (min-width: #{$su-screen-sm})') !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-sm
$su-breakpoint-sm: 'only screen and (min-width: #{$su-screen-sm})' !default;

//
// $su-breakpoint-sm-only
//
// Mixin for basic mobile-first media query for sm-only screen size.
//
// Markup: $su-breakpoint-sm-only: 'only screen and (min-width: #{$su-screen-sm}) and (max-width: #{$su-screen-md - 1})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-sm-only
$su-breakpoint-sm-only: 'only screen and (min-width: #{$su-screen-sm}) and (max-width: #{$su-screen-md - 1})' !default;

//
// $su-breakpoint-md
//
// Mixin for basic mobile-first media query for md-and-up screen size.
//
// Markup: $su-breakpoint-md: 'only screen and (min-width: #{$su-screen-md})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-md
$su-breakpoint-md: 'only screen and (min-width: #{$su-screen-md})' !default;

//
// $su-breakpoint-md-only
//
// Mixin for basic mobile-first media query for md-only screen size.
//
// Markup: $su-breakpoint-md-only: 'only screen and (min-width: #{$su-screen-md}) and (max-width: #{$su-screen-lg - 1})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-md-only
$su-breakpoint-md-only: 'only screen and (min-width: #{$su-screen-md}) and (max-width: #{$su-screen-lg - 1})' !default;

//
// $su-breakpoint-lg
//
// Mixin for basic mobile-first media query for lg-and-up screen size.
//
// Markup: $su-breakpoint-lg: 'only screen and (min-width: #{$su-screen-lg})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-lg
$su-breakpoint-lg: 'only screen and (min-width: #{$su-screen-lg})' !default;

//
// $su-breakpoint-lg-only
//
// Mixin for basic mobile-first media query for lg-only screen size.
//
// Markup: $su-breakpoint-lg-only: 'only screen and (min-width: #{$su-screen-lg}) and (max-width: #{$su-screen-xl - 1})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-lg-only
$su-breakpoint-lg-only: 'only screen and (min-width: #{$su-screen-lg}) and (max-width: #{$su-screen-xl - 1})' !default;

//
// $su-breakpoint-xl
//
// Mixin for basic mobile-first media query for xl-and-up screen size.
//
// Markup: $su-breakpoint-xl: 'only screen and (min-width: #{$su-screen-xl})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-xl
$su-breakpoint-xl: 'only screen and (min-width: #{$su-screen-xl})' !default;

//
// $su-breakpoint-xl-only
//
// Mixin for basic mobile-first media query for xl-only screen size.
//
// Markup: $su-breakpoint-xl-only: 'only screen and (min-width: #{$su-screen-xl}) and (max-width: #{$su-screen-2xl - 1})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-xl-only
$su-breakpoint-xl-only: 'only screen and (min-width: #{$su-screen-xl}) and (max-width: #{$su-screen-2xl - 1})' !default;

//
// $su-breakpoint-2xl
//
// Mixin for basic mobile-first media query for 2xl-and-up screen size.
//
// Markup: $su-breakpoint-2xl: 'only screen and (min-width: #{$su-screen-2xl})' !default;
//
// Styleguide: Variables.Core.Breakpoints.su-breakpoint-2xl
$su-breakpoint-2xl: 'only screen and (min-width: #{$su-screen-2xl})' !default;

//
// Just in case.
//
$su-breakpoint-2xl-only: $su-breakpoint-2xl;

//////////////////////////////////////////////////////////////////////////////
