@charset "UTF-8";

// Flex Grid
//
// Markup: ../../templates/core/grid/grid.twig
//
// Style guide: Core.FlexGrid

// Generates grid classes if variable is set to true.
@if $grid-classes-enabled {

  .flex-container {
    @include flex-container;
  }

  // Properties for all breakpoints.
  %grid-column {
    position: relative;
    width: 100%;
    min-height: 1px;
    padding: 1rem;
  }

  @each $breakpoint in map-keys($grid-screens) {
    $insert: breakpoint-insert($breakpoint, $grid-screens);
    $gutter: map-get($grid-gutters, $breakpoint);

    // Allow columns to stretch full width below their breakpoints.
    @for $n from 1 through $grid-columns {
      .flex#{$insert}-#{$n}-of-12 {
        @extend %grid-column;
      }
    }
    .flex#{$insert}-of-12,
    .flex#{$insert}-auto {
      @extend %grid-column;
    }

    @include grid-media-min($breakpoint, $grid-screens) {

      // Provide .flex-{bp}-of-12 classes for equal width flexbox columns.
      .flex#{$insert}-of-12 {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .flex#{$insert}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none;
      }

      @for $n from 1 through $grid-columns {
        .flex#{$insert}-#{$n}-of-12 {
          @include flex-column($n, $gutter, $grid-columns);
        }
      }

      @for $n from 0 through ($grid-columns - 1) {
        @if not ($insert == "" and $n == 0) { // No .flex-push-0.
          .flex-push#{$insert}-#{$n} {
            @include flex-grid-push($n, $grid-columns);
          }
        }
      }
    }
  }

}
