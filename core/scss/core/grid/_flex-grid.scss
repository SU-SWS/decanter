@charset "UTF-8";

// Flex Grid
//
// Markup: ../../templates/core/grid/grid.twig
//
// Style guide: Core.FlexGrid

// The container helper.
.flex-container {
  @include flex-container;
}

// Properties for all columns at all breakpoints.
%grid-column {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding: 1rem;
}

// Loop through each breakpoint to generate column and push classes
// For every column.
@each $_breakpoint, $_media-query in $grid-screens {

  // The breakpoint short code. eg: xs, sm, lg
  $_insert: breakpoint-insert($_breakpoint, $grid-screens);
  // The gutter size at this breakpoint.
  $_gutter: map-get($grid-gutters, $_breakpoint);

  // For all breakpoints and columns create a default state.
  @for $n from 1 through $grid-columns {
    .flex#{$_insert}-#{$n}-of-#{$grid-columns} {
      @extend %grid-column;
    }
  }

  // Add a helper class for the default column state.
  .flex#{$_insert}-of-#{$grid-columns},
  .flex#{$_insert}-auto {
    @extend %grid-column;
  }

  // At each breakpoint create size and gutter specific settings for each
  // column.
  @include grid-media($_breakpoint) {

    // Provide .flex-{bp}-of-12 classes for equal width flexbox columns.
    .flex#{$_insert}-of-#{$grid-columns} {
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
    }

    // @jgknox: Fix this comment.
    .flex#{$_insert}-auto {
      flex: 0 0 auto;
      width: auto;
      max-width: none;
    }

    // Foreach of the columns at this breakpoint create a helper push class.
    @for $n from 0 through ($grid-columns - 1) {
      @if not ($_insert == "" and $n == 0) { // No .flex-push-0.
        .flex-push#{$_insert}-#{$n} {
          @include flex-grid-push($n, $grid-columns);
        }
      }
    }
  }
}

// Loop through each column and breakpoint creating a responsive flex column.
// The gutter sizes change as the breakpoints change so as the breakpoints
// get larger for each breakpoint class we have to adjust the gutter. For
// example, the flex-md-1-of-12 grid class will need a breakpoint wrapping
// and gutter size for breakpoints md -> 2xl but flex-xl-1-of-12 will only need
// breakpoints wrapping for breakpoints xl -> 2xl.
@for $n from 1 through $grid-columns {

  // Storage for breakpoint codes through each loop of columns.
  $_codes: ();

  @each $_code, $_screen in $grid-screens {

    // The breakpoint short code. eg: xs, sm, lg with a dash
    $_insert: breakpoint-insert($_code, $grid-screens);

    // The flex-breakpoint-column class.
    .flex#{$_insert}-#{$n}-of-#{$grid-columns} {

      // Loop through the already used breakpoints and remove them
      // from the grid map as we only want to create a responsive
      // column for the current breakpoint and larger. Smaller screens
      // collapse to 100%.
      $_grids: $grid-media;
      @each $sh in $_codes {
        $_grids: map-remove($_grids, $sh);
      }

      // Generate the media queries and column size.
      @if (length($_grids) > 0) {
        @include responsive-flex-column($n, $_grids);
      }

      // Add the current BP code to the storage for next round.
      $_codes: append($_codes, $_code);

    }
  }
}
