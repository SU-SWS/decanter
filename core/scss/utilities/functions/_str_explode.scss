@charset "UTF-8";

//
// su_str_explode($string, $delimiter)
//
// split a string into a list at delimiter
//
// $string - the string you want to split
// $delimiter - the string used to separate $string into list items; empty string splits $string into individual characters; default is '.'
//
// Style guide: Functions.su_str_explode
//

@function su_str_explode($string, $delimiter: '.') {
  @if type-of($string) != 'string' {
    @error 'su_str_explode: $string must be a string. Received "#{$string}"';
  }
  @if type-of($delimiter) != 'string' {
    @error 'su_str_explode: $delimiter must be a string. Received "#{$delimiter}"';
  }

  $result: ();
  @if str-length($delimiter) == 0 { // if no delimiter, split string into individual characters
    @for $i from 1 through str-length($string) {
      $result: append($result, str-slice($string, $i, $i));
    }
    @return $result;
  }
  $running: true;
  @while $running {
    $index: str-index($string, $delimiter);
    @if $index != null {
      $item: str-slice($string, 1, ($index - 1));
      $result: append($result, $item);
      $string: str-slice($string, ($index + str-length($delimiter)));
    } @else {
      $running: false;
    }
  }
  $result: append($result, $string);
  @return $result;
}
