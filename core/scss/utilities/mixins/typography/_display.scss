@charset "UTF-8";

//
// @h1
//
// Default heading 1 styling.
//
// Style guide: Mixins.Typography.h1
//
@mixin display($level: 'a') {
  $key: 'display-#{$level}';
  @if not map_has_key($sans, $key) {
    @error "display(#{$level}): $sans does not have key #{$key}";
  }
  $styles: map_get($sans, $key); // TODO: replace with su_deep_map_get when we implement skins
  @debug "display-a styles: #{$styles}";
  @debug 'family: '; @debug map_has_key($styles, 'family');
  @debug 'weight: '; @debug map_has_key($styles, 'weight');
  @debug 'style: ';  @debug map_has_key($styles, 'style');
  @debug 'size-modscale-steps: '; @debug map_has_key($styles, 'size-modscale-steps');
  @debug 'color: ';  @debug map_has_key($styles, 'color');
  @debug 'line-height: '; @debug map_has_key($styles, 'line-height');
  @debug 'text-transform: '; @debug map_has_key($styles, 'text-transform');
  font: {
    @if map_has_key($styles, 'family') {
      family: map_get($styles, 'family');
    }
    @if map_has_key($styles, 'weight') {
      weight: map_get($styles, 'weight');
    }
    @if map_has_key($styles, 'style') {
      style: map_get($styles, 'style');
    }
  }
  @if map_has_key($styles, 'size-modscale-steps') {
    @include modular-typography(map_get($styles, 'size-modscale-steps'));
  }
  @if map_has_key($styles, 'color') {
    color: map_get($styles, 'color');
  }
  @if map_has_key($styles, 'line-height') {
    line-height: map_get($styles, 'line-height');
  }
  @if map_has_key($styles, 'text-transform') {
    text-transform: map_get($styles, 'text-transform');
  }

  &:first-child {
    @include margin(0 null null);
  }
}
