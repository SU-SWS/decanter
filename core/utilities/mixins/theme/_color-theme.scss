@charset "UTF-8";
////
/// Color themes
/// @group mixins|color
////

// Dependency on the $colors variable.
@import '../../variables/colors';

/// `color-theme` allows you to change the default color palette within the specified block.
/// optionally, it lets you target a specific selector.
///
/// @name Color Theme
/// @group mixins|theme
///
/// @argument {map} $palette [$colors]
///   The color palette to be used within the scope of the block.
///
/// @content
///   `color-theme` will temporarily override the default color map with the attributes of the
///   specified `$palette`. This change is scoped to within the mixin block, and once the mixin
///   has ended, the default color map will revert to its original state as defined by `$color`.
///
/// @argument {string} $selector ['&']
///   the `$selector` argument allows you to specify a different class than the current. It's
///   especially useful when used with the `render-color-themes` mixin.
///
/// @example scss - SCSS
///   $green-theme: (
///     brand:                        #2c853c,
///     action:                       #00992b,
///     action-active:                #007b38,
///     background:                   #fff,
///     background-secondary:         #f4f4f4,
///     border:                       #ccc,
///     text:                         #121111,
///     text-active:                  #00992b,
///     reverse-text:                 #fff,
///     reverse-text-active:          #fff,
///   );
///   .card {
///     @include color-theme($green-theme) {
///       background-color: color(background);
///       color: color(text-active);
///     }
///   }
///
/// @example css - CSS output
///   .card {
///     background-color: #fff;
///     color: #121111;
///   }
///
/// @example scss - SCSS
///   @include color-theme($green-theme, '.card') {
///     background-color: color(background);
///     color: color(text-active);
///   }
///
/// @example css - CSS output
///   .card {
///     background-color: #fff;
///     color: #121111;
///   }
///
/// @require color
/// @require $colors

@mixin color-theme($palette, $selector: '&') {
  $_default-color-palette: $colors;
  $colors: map-merge($colors, $palette) !global;
  #{$selector} {
    @content;
  }
  $colors: $_default-color-palette !global;
}
