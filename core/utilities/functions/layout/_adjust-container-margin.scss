@charset "UTF-8";
////
/// Adjust Container Margin
/// @group functions
////

/// Adjusts the margin of a container by growing or shrinking it by a certain number of columns.
/// This is a companion function to set-container-padding, which allows a container to break out
/// of it's own boundaries.
///
/// @todo: Documentation

@function _adjust-container-margin(
  $columns,
  $grid: $neat-grid,
  $max-width: false,
  $grid-collapse: false,
  $grid-columns: false
)
{
  $_columns: _neat-column-default($grid, $columns);
  $_grid-columns: _retrieve-neat-setting($grid, columns);
  $_grid-gutter: _retrieve-neat-setting($grid, gutter);
  $_max-container-width: _retrieve-decanter-setting(max-container-width);

  // Checks to see if the parent container has a max width
  @if $max-width == false {
    // Checks If the parent container doesn't span the full grid columns.
    @if type-of($grid-columns) == number and ($grid-columns < $_grid-columns) {
      // Checks to see if we need to calculate a gutter
      @if $grid-collapse == true {
        @return calc((((100% + #{$_grid-gutter * 2}) / #{$grid-columns}) * #{-$_columns}) - #{$_grid-gutter});
      } @else {
        @return calc(((100% + #{$_grid-gutter * 2}) / #{$grid-columns}) * #{-$_columns});
      }
      // Otherwise, calculate as if the parent container spans the full grid columns
    } @else {
      // Checks to see if we need to calculate a gutter
      @if $_grid-columns > $columns {
        @if $grid-collapse == true {
          @return calc(((100% / #{$_grid-columns}) * #{-$_columns}) - #{$_grid-gutter});
        } @else {
          @return calc((100% / #{$_grid-columns}) * #{-$_columns});
        }
      } @else {
        @if $grid-collapse == true {
          @return 0;
        } @else {
          @return $_grid-gutter;
        }
      }
    }

  } @else if type-of($max-width) == number {
    // Calculates the width of the container in pixels, based on the max-width value
    @if $grid-collapse == true {
      @return calc(((#{$max-width / 2} / #{$_grid-columns}) * #{-$_columns}) - #{$_grid-gutter});
    } @else {
      @return calc((#{$max-width / 2} / #{$_grid-columns}) * #{-$_columns});
    }
  } @else if $max-width == true {
    // Calculates the width of the container in pixels, based on the global max content width
    @if $grid-collapse == true {
      @return calc(((#{$_max-container-width / 2} / #{$_grid-columns}) * #{-$columns}) - #{$_grid-gutter});
    } @else {
      @return calc((#{$_max-container-width / 2} / #{$_grid-columns}) * #{-$columns});
    }
  }
}
