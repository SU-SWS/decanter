@charset "UTF-8";

////
/// Padding
/// @group functions
////

/// Set Container padding
/// Creates a fluid container of a certain number of columns.
/// Can be constrained to a specific max width, or to the project's global `max container width`.
///
/// @param {number | string} columns  [null] - The number of columns the container spans (ex: 1 or 1 of 2)
/// @param {map} grid  [$neat-grid] - The grid to base the calculations on.
/// @param {length(with unit)} v-space [1em] - The value for padding-top and padding-bottom in a container
/// @param {boolean} max-width [false] - Whether the container's columns are based on the full parent width, or on a set max width

@function _set-container-padding(
  $columns: null,
  $grid: $neat-grid,
  $max-width: false
)
{
  $_columns: _neat-column-default($grid, $columns); // Retrieves max columns from specified grid if empty, or the specified number of columns otherwise
  $_grid-columns: _retrieve-neat-setting($grid, columns); // Retrieves the number of max columns from the specified grid
  $_grid-gutter: _retrieve-neat-setting($grid, gutter); // Retrieves the gutter from the specified grid
  $_max-container-width: _retrieve-decanter-setting(max-container-width); // Retrieves the project's max container width
  //Checks to see if we need to add a max-width.
  @if $max-width == false {
    // Checks to see if we need to calculate a gutter
    @if $_grid-columns >= $_columns {
      $_column-multiplier: $_grid-columns - $_columns;
      @return calc(((50% /#{$_grid-columns}) * #{$_column-multiplier}) + #{$_grid-gutter});
    } @else {
      @return $_grid-gutter;
    }
    // Otherwise we calculate the max width in pixels
  } @else if type_of($max-width) == number {
    $_container-width: (((px($max-width / 2)) / $_grid-columns) * $_columns);
    @return calc(50% - (#{$_container-width} - #{$_grid-gutter}));
    // Finally, if max width is set to true, we use the project's "max-container-width" configuration option.
  } @else if ($max-width == true) {
    $_container-width: ((($_max-container-width / 2) / $_grid-columns) * $_columns);
    @return calc(50% - (#{$_container-width} - #{$_grid-gutter}));
  }
}
