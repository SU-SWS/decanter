@charset "UTF-8";

/// Adjust Container Margin
/// Adjusts the margin of a container by growing or shrinking it by a certain number of columns.
/// This is a companion function to set-container-padding, which allows a container to break out
/// of it's own boundaries.
///
/// todo: Documentation

@function _adjust-container-margin(
  $columns,
  $grid: $neat-grid,
  $max-width: false,
  $grid-collapse: false
)
{
  $columns: _neat-column-default($grid, $columns);
  $_grid-columns: _retrieve-neat-setting($grid, columns);
  $_grid-gutter: _retrieve-neat-setting($grid, gutter);

  //Checks to see if we need to add a max-width.
  @if $max-width == false {
    // Checks to see if we need to calculate a gutter
    @if $_grid-columns > $columns {
      @if $grid-collapse == true {
        @return calc(((100vw / #{$_grid-columns * 2}) * #{-$columns}) - #{$_grid-gutter});
      } @else {
        @return calc((100vw / #{$_grid-columns * 2}) * #{-$columns});
      }
    } @else {
      @if $grid-collapse == true {
        @return 0;
      } @else {
        @return $_grid-gutter;
      }
    }

  } @else if type-of($max-width) == number {
    // Calculates the width of the container in pixels, based on the max-width value
    @if $grid-collapse == true {
      @return calc(((#{$max-width} / 24) * #{-$columns}) - #{$_grid-gutter});
    } @else {
      @return calc((#{$max-width} / 24) * #{-$columns});
    }
  } @else if $max-width == true {
    // Calculates the width of the container in pixels, based on the global max content width
    @if $grid-collapse == true {
      @return calc(((#{$max-container-width} / 24) * #{-$columns}) - #{$_grid-gutter});
    } @else {
      @return calc((#{$max-container-width} / 24) * #{-$columns});
    }
  }
}
