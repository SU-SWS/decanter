@charset "UTF-8";

//
// Flex Grid
//
// Markup: ../../templates/core/flex-grid/flex-grid.twig
//
// Style guide: Core.FlexGrid

// The container helper.
.flex-container {
  @include flex-container;

  &--collapse {
    @include margin(0 null);

    @include grid-media('sm') {
      @include margin(0 null);
    }

    @include grid-media('md') {
      @include margin(0 null);
    }

    @include grid-media('lg') {
      @include margin(0 null);
    }

    @include grid-media('xl') {
      @include margin(0 null);
    }

    @include grid-media('2xl') {
      @include margin(0 null);
    }

  }

  &--row-gap {
    > * {
      @include margin(0 0 map-get($grid-gutters, 'xs') 0);

      @include grid-media('sm') {
        @include margin(0 0 map-get($grid-gutters, 'sm') 0);
      }

      @include grid-media('md') {
        @include margin(0 0 map-get($grid-gutters, 'md') 0);
      }

      @include grid-media('lg') {
        @include margin(0 0 map-get($grid-gutters, 'lg') 0);
      }

      @include grid-media('xl') {
        @include margin(0 0 map-get($grid-gutters, 'xl') 0);
      }

      @include grid-media('2xl') {
        @include margin(0 0 map-get($grid-gutters, '2xl') 0);
      }

    }
  }

}

// Properties for all columns at all breakpoints.
%grid-column {
  position: relative;
  width: 100%;
  min-height: 1px;
}

// Sizes item according to its width/height properties and/or size of content.
.flex-auto {
  @extend %grid-column;
  flex: 0 0 auto;
  width: auto;
  max-width: none;
}

// Loop through each breakpoint to generate column and push classes
// For every column.
@each $_breakpoint, $_media-query in $grid-screens {

  // The breakpoint short code. eg: xs, sm, lg
  $_insert: breakpoint-insert($_breakpoint, $grid-screens);

  // For all breakpoints and columns create a default state.
  @for $n from 1 through $grid-columns {
    .flex#{$_insert}-#{$n}-of-#{$grid-columns},
    .flex-#{$n}-of-#{$grid-columns} {
      @extend %grid-column;
    }
  }

  // At each breakpoint create size and gutter specific settings for each
  // column.
  @include grid-media($_breakpoint) {
    // Foreach of the columns at this breakpoint create a helper push class.
    @for $n from 0 through ($grid-columns - 1) {
      @if not ($_insert == "" and $n == 0) { // No .flex-push-0.
        .flex-push#{$_insert}-#{$n} {
          @include flex-grid-push($n, $grid-columns);
        }
      }
    }
  }

}

// Loop through each column and breakpoint creating a responsive flex column.
// The gutter sizes change as the breakpoints change so as the breakpoints
// get larger for each breakpoint class we have to adjust the gutter.
@for $n from 1 through $grid-columns {
  .flex-#{$n}-of-#{$grid-columns} {
    $cols: $n of $grid-columns;
    @include responsive-flex-column($cols, map-remove($grid-media, 'xs'));
  }
}

// Create breakpoint flex overrides.
// Loop through each of the breakpoints and columns to create a grid class.
@for $n from 1 through $grid-columns {
  // Loop through each breakpoint.
  @each $_code, $_screen in $grid-screens {
    // The breakpoint short code. eg: xs, sm, lg with a dash
    $_insert: breakpoint-insert($_code, $grid-screens);
    // The gutter size at this breakpoint.
    $_gutter: map-get($grid-gutters, $_code);

    // The flex-breakpoint-column class.
    .flex#{$_insert}-#{$n}-of-#{$grid-columns} {
      // Generate the media queries and column size.
      @include grid-media-only($_code) {
        @include flex-column($n of $grid-columns, $_gutter);
      }
    }
  }
}
